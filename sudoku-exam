#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void copyArray(int tab[9][9], int copy[9][9] ){
    // Cette fonction prend deux tableaux d'entiers à deux dimensions, tab et copy, en paramètres.
    // tab est le tableau que nous voulons copier dans le tableau copy.

    for(int i = 0; i < 9; i++){
        // Cette boucle for parcourt les lignes du tableau, de 0 à 8.

        for(int j = 0; j < 9; j++){
            // Cette boucle for parcourt les colonnes du tableau, de 0 à 8.

            copy[i][j] = tab[i][j];
            // Cette ligne de code copie la valeur de la case (i,j) de tab dans la case correspondante de copy.
        }
    }
    // Après l'exécution de ces deux boucles for, le tableau copy est une copie exacte du tableau tab.
}

void afficher(int tab[9][9]){
    // Cette fonction prend un tableau d'entiers à deux dimensions, tab, en paramètre.
    // Elle a pour but d'afficher le tableau dans la console.

    // Affichage de la première ligne de la grille, indiquant les coordonnées en X
    printf("| Y\\X  ");
    for(int i = 0; i < 9; i++){
        printf("| %d ", i);
    }
    printf("|\n");

    // Affichage de la ligne séparatrice horizontale
    for(int i = 0; i < 10; i++){
        printf("----");
    }

    // Affichage du contenu de la grille
    for(int i = 0; i < 9; i++){
        printf("\n");
        printf("| %d >  ", i); // Affichage des coordonnées en Y
        for(int j = 0; j < 9; j++){
            printf("| %d ", tab[i][j]); // Affichage de la valeur de chaque case du tableau
        }
        printf("|\n");
    }

    printf("\n"); // Saut de ligne en fin d'affichage
}

int verifierLigneColonne(int tab[9][9], int ligne, int ligneOrCol ){

    int choices[9] = {0,0,0, 0,0,0, 0,0,0};
    int result = 0;
    if(ligneOrCol){
        for(int i = 0; i < 9; i++){
            //int numero = tab[i][ligne];
            if(tab[i][ligne] > 0){
                int numero = tab[i][ligne];
                // printf( "\n\n NUM %d", numero -1 );
                choices[numero - 1] = choices[numero- 1] + 1 ;
            }
        }
    } else {
        for(int i = 0; i < 9; i++){
            if(tab[ligne][i]){
                int numero = tab[ligne][i];
                choices[numero - 1] = choices[numero- 1] + 1 ;
            }
        }
    }
    for(int i = 0; i < 9; i++){
        if(choices[i] > 1){
            result = 1;
        }
    }
return result;
}

int verifierRegion(int tab[9][9], int k, int l){

    int choices[9] = {0,0,0, 0,0,0, 0,0,0};
    int result = 1;
    for(int i = 0; i < 3; i++){
        for(int j = 0; j < 3; j++){
            if(tab[i + k*3][j + l*3] > 0){
                int numero = tab[i + k*3][j + l*3];
                choices[numero - 1] = choices[numero- 1] + 1 ;
            }
        }
    }
    for(int i = 0; i < 9; i++){
        if(choices[i] > 1){
            result = 0;
        }
    }
    return result;
}

void generate(int tab[9][9], int copyTableau[9][9]){

    for(int i = 0; i < 9; i++){
        for(int j = 0; j < 9; j++){
            // if(!(rand() % 2)){
            if((rand() % 100) < 97){
                copyTableau[i][j] = tab[i][j];
            }
        }
    }

}

int verifierGrille(int tab[9][9]){

    int isCorrect =1;
    for(int i = 0; i < 9; i++ ){
    int verifLigne = verifierLigneColonne(tab, i, 1);
    int verifCol = verifierLigneColonne(tab, i, 0);
    if(verifCol || verifLigne){
        printf("\n\nAhrf, il semblerait que votre solution ne corresponde pas aux regles, reessayez !\n\n");
        isCorrect = 0;
    }
    }
    for(int i = 0; i < 3; i++){
    for(int j = 0; j < 3; j++){
        if(verifierRegion(tab, i, j ) == 0){
            isCorrect = 0;
        }
    }
    }
    return isCorrect;
}

int saisir(int tab[9][9]){

    int result = 0;

    while (result == 0)
    {
        int tableauTest[9][9] = {
            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0},

            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0},

            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0}
        };
        copyArray(tab, tableauTest);
        int saisie = 0;
        // int saisieX = 0;
        // int saisieY = 0;

        printf("Veuillez saisir un Y\n");
        scanf("%d", &saisie);
        int saisieX = saisie;
        printf("Veuillez saisir un X\n");
        scanf("%d", &saisie);
        int saisieY = saisie;

        if(tab[saisieX][saisieY]){
            printf("Cette case est deja remplie Reessayez\n");
        } else {
            printf("Quelle valeur souhaitez vous inserer ?\n");
            scanf("%d", &saisie);
            int saisieVal = saisie;
            tableauTest[saisieX][saisieY] = saisieVal;

            result = verifierGrille(tableauTest);
            if(result == 1 ){
                tab[saisieX][saisieY] = saisieVal;
            }
        }
    }
    return result;
}

int verifyContinue(int tab[9][9]){
    for(int i = 0; i < 9; i++){
        for(int j = 0; j < 9; j++){
            if(tab[i][j]){

            }else{
                return 1;
            }
        }
    }
    return 0;
}

int main(){
    // Ne pas toucher le code entre les commentaires
    srand( time( NULL ) );

    int i, j;
    int solution[9][9];
    printf("SOLUTION");
    printf("\n");
    printf("---------------------------------");
    printf("\n");
    for(j=0;j<9; ++j)
    {
    for(i=0; i<9; ++i)
        solution[j][i] = (i + j*3 +j /3) %9 +1 ;
    }

    for(i=0;i<9; ++i)
    {
    for(j=0; j<9; ++j)
        printf("%d ", solution[i][j]);
    printf("\n");
    }
    printf("---------------------------------");
    printf("\n");
    //toucher le code entre les commentaires
    int tableauJoueur[9][9] = {
        {0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0},

        {0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0},

        {0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0}
    };

    for(int i = 0; i < 9; i++){
        for(int j = 0; j < 9; j++){
            printf("%d ", tableauJoueur[i][j]);
        }
        printf("\n");
    }
    int isTurning = 0;
    generate(solution, tableauJoueur);
    do{
        afficher(tableauJoueur);
        saisir(tableauJoueur);
        isTurning = verifyContinue(tableauJoueur);
    } while(isTurning);
    printf("Bravo, vous avez reussi l'epreuve du sudoku");
    system("pause");
    return 0;
}
